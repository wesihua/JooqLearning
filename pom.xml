<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.wei.jooq</groupId>
  <artifactId>JooqLearning</artifactId>
  <packaging>jar</packaging>
  <version>0.0.1-SNAPSHOT</version>
  <name>JooqLearning</name>
  <url>http://maven.apache.org</url>
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>
    <dependency>
	  <groupId>org.jooq</groupId>
	  <artifactId>jooq</artifactId>
	  <version>3.9.2</version>
	</dependency>
	<dependency>
	  <groupId>org.jooq</groupId>
	  <artifactId>jooq-meta</artifactId>
	  <version>3.9.2</version>
	</dependency>
	<dependency>
	  <groupId>org.jooq</groupId>
	  <artifactId>jooq-codegen</artifactId>
	  <version>3.9.2</version>
	</dependency>
    <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context</artifactId>
        <version>4.2.2.RELEASE</version>
        <scope>runtime</scope>
    </dependency>
    <dependency>
	    <groupId>org.springframework</groupId>
	    <artifactId>spring-aop</artifactId>
	    <version>4.2.2.RELEASE</version>
	</dependency>
	<dependency>
	    <groupId>org.springframework</groupId>
	    <artifactId>spring-beans</artifactId>
	    <version>4.2.2.RELEASE</version>
	</dependency>
	<dependency>
	    <groupId>org.springframework</groupId>
	    <artifactId>spring-web</artifactId>
	    <version>4.2.2.RELEASE</version>
	</dependency>
	<dependency>
	    <groupId>org.springframework</groupId>
	    <artifactId>spring-webmvc</artifactId>
	    <version>4.2.2.RELEASE</version>
	</dependency>
	<dependency>
	    <groupId>org.springframework</groupId>
	    <artifactId>spring-jdbc</artifactId>
	    <version>4.2.2.RELEASE</version>
	</dependency>
	<dependency>
	    <groupId>org.springframework</groupId>
	    <artifactId>spring-aspects</artifactId>
	    <version>4.2.2.RELEASE</version>
	</dependency>
	<dependency>
	    <groupId>org.springframework</groupId>
	    <artifactId>spring-test</artifactId>
	    <version>4.2.2.RELEASE</version>
	</dependency>
    <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-core</artifactId>
        <version>4.2.2.RELEASE</version>
        <exclusions>
            <exclusion>
                <groupId>commons-logging</groupId>
                <artifactId>commons-logging</artifactId>
            </exclusion>
        </exclusions>
    </dependency>
    <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>jcl-over-slf4j</artifactId>
        <version>1.5.8</version>
    </dependency>
    <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>1.5.8</version>
    </dependency>
    <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-log4j12</artifactId>
        <version>1.5.8</version>
    </dependency>
    <dependency>
        <groupId>log4j</groupId>
        <artifactId>log4j</artifactId>
        <version>1.2.14</version>
    </dependency>
    <dependency>
	    <groupId>commons-dbcp</groupId>
	    <artifactId>commons-dbcp</artifactId>
	    <version>1.4</version>
	</dependency>
	<dependency>
	    <groupId>mysql</groupId>
	    <artifactId>mysql-connector-java</artifactId>
	    <version>5.1.42</version>
	</dependency>
	<dependency>
	    <groupId>commons-fileupload</groupId>
	    <artifactId>commons-fileupload</artifactId>
	    <version>1.3.2</version>
	</dependency>
  </dependencies>
  
  <build>
  	<plugins>
  		<plugin>
		  <groupId>org.jooq</groupId>
		  <artifactId>jooq-codegen-maven</artifactId>
		  <version>3.9.2</version>
		
		  <!-- The plugin should hook into the generate goal -->
		  <executions>
		    <execution>
		      <phase>generate-sources</phase>
		      <goals>
		        <goal>generate</goal>
		      </goals>
		    </execution>
		  </executions>
		
		  <!-- Manage the plugin's dependency. In this example, we'll use a PostgreSQL database -->
		  <dependencies>
		    <dependency>
			    <groupId>mysql</groupId>
			    <artifactId>mysql-connector-java</artifactId>
			    <version>5.1.42</version>
			</dependency>
		  </dependencies>
		
		  <!-- Specify the plugin configuration.
		       The configuration format is the same as for the standalone code generator -->
		  <configuration>
		
		    <!-- JDBC connection parameters -->
		    <jdbc>
                <driver>com.mysql.jdbc.Driver</driver>
                <url>jdbc:mysql://localhost:3306</url>
                <user>root</user>
                <password>123</password>
            </jdbc>
		
		    <!-- Generator parameters -->
		    <generator>
		      <database>
		        <name>org.jooq.util.mysql.MySQLDatabase</name>
		        <includes>.*</includes>
		        <excludes></excludes>
		        <!-- In case your database supports catalogs, e.g. SQL Server:
		        <inputCatalog>public</inputCatalog>
		          -->
		        <inputSchema>library</inputSchema>
		      </database>
		      <generate>
                  <fluentSetters>true</fluentSetters>
                  <pojos>true</pojos>
                  <pojosToString>true</pojosToString>
              </generate>
		      <target>
		        <packageName>com.wei.jooq.generated</packageName>
		        <directory>F:/mvntest/JooqLearning/src/main/java</directory>
		      </target>
		    </generator>
		  </configuration>
		</plugin>
  	</plugins>
  </build>
</project>
